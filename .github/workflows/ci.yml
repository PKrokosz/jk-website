name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  quality:
    name: Quality checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    env:
      CI: true
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.18.3
          run_install: false
          standalone: true

      - name: Approve pnpm builds
        if: hashFiles('.pnpm-builds.json') != ''
        run: pnpm run approve-builds

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Prepare integration database
        if: matrix.node-version == '20.x'
        run: pnpm exec tsx scripts/prepare-integration-db.ts

      - name: Verify Drizzle schema metadata
        if: matrix.node-version == '20.x'
        run: |
          pnpm db:generate
          if [ -n "$(git status --short drizzle)" ]; then
            echo "::error::Drizzle schema metadata is out of sync. Run 'pnpm db:generate' locally and commit the changes."
            git status --short drizzle
            exit 1
          fi

      - name: Install Playwright browsers
        if: matrix.node-version == '20.x'
        run: pnpm exec playwright install --with-deps

      - name: Quality gate
        if: matrix.node-version == '22.x'
        run: pnpm qa

      - name: Full CI gate
        if: matrix.node-version == '20.x'
        run: pnpm qa:ci

      - name: Run integration tests
        if: matrix.node-version == '20.x'
        run: pnpm test src/app/api/products/route.integration.test.ts

      - name: Upload Playwright report
        if: always() && matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Upload coverage report
        if: always() && matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

      - name: Tear down integration database
        if: always() && matrix.node-version == '20.x'
        run: docker compose down --volumes jkdb

